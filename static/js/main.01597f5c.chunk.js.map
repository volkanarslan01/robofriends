{"version":3,"sources":["components/SearchBox.js","components/card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","_ref","searchField","searchChange","react_default","a","createElement","type","placeholder","className","onChange","Card","name","id","email","alt","src","concat","CardList","robots","map","users","index","card","key","Scroll","props","style","overflow","border","height","margin","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","React","Component","App","onsearchChange","event","target","value","_this2","fetch","then","response","json","_this$state","robotsFilter","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","container_App"],"mappings":"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","file":"static/js/main.01597f5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {robots} from '../robots';\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n return (\r\n    <input \r\n     type = 'searchbox' \r\n     placeholder = 'Search Robots'\r\n     className = 'pa3 ba b--green bg-lightest-blue'\r\n     onChange={searchChange}\r\n     />\r\n )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({name,id,email}) => {\r\n// Different Use ES6\r\n// const {name,email,id} = props;\r\nreturn (\r\n  \r\n    <div className=\" tc bg-light-green dib  br3 pa3 ma2 grow  bw2 shadow-5\">\r\n        {/* CSS tachyons */}\r\n\r\n        <img  alt = 'robots 'src = {`https://robohash.org/${id}?200x200`}/>\r\n        {/* Random İmage APİ */}\r\n        <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n)\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({robots})=> {\r\n  // if(true){\r\n  //   throw new Error('OOOPS')\r\n  // }\r\n     return (\r\n       <div>\r\n    {\r\n    // Map Method\r\n     robots.map((users , index) =>{\r\n       const {id,name,email,} = users;\r\n        return (<Card \r\n          key= {index}\r\n          id = {id}\r\n          name = {name} \r\n          email = {email}\r\n        />\r\n    );\r\n      })\r\n    }\r\n      </div>\r\n     )  \r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props)=> {\r\n    return <div style={{overflow: 'scroll',border: '5px solid darkblue',height: '800px',margin:'5px'}}>\r\n    {props.children}\r\n    </div>\r\n}\r\nexport default Scroll;","import React ,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          hasError: false,\r\n        }\r\n    }\r\n    componentDidCatch (error,info){\r\n    this.setState ({hasError: true})\r\n    }\r\n    render (){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops. That is not good</h1>\r\n\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;"," import React,{Component}  from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n    super()\r\n    this.state = {\r\n    robots: [],\r\n    searchField: ''\r\n    }}\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=> this.setState({robots: users}));\r\n    }\r\n    onsearchChange = (event) => {\r\n    this.setState({searchField: event.target.value})\r\n \r\n    }\r\n    render() {\r\n        const {robots,searchField} = this.state;\r\n           const robotsFilter = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n            });\r\n         // Shorts if-else\r\n            return !robots.length ? <h1>Loading...</h1> :(\r\n                <div className='tc'>\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange= {this.onsearchChange}/>\r\n                <Scroll>\r\n                <ErrorBoundary>\r\n                <CardList robots = {robotsFilter}/>\r\n                </ErrorBoundary>\r\n                </Scroll>\r\n                </div>\r\n             );\r\n           \r\n      \r\n    }\r\n\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './container/index.css';\r\nimport App from './container/App';\r\n// İmport card.js Files\r\n//  import Card from './card.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'; \r\n// CSS import Tachyons\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n   <App></App>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}